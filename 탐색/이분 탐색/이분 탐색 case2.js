// 이분 탐색 case2: 찾아야 하는 값을 모르는 경우 (범위 좁히기)

// 찾아야 하는 값의 조건이 funcA라고 하고, 배열이 아래와 같을 때
// arr = [0, 2, 4, 6, 8, 10, 12, 14, 16, 18]

// 각 포인터의 인덱스
// left : 0, mid : 4(내림), right : 9

// arr[mid] 가 조건 funcA에 만족하는지 확인함

// 1. 조건에 만족하는 경우 (funcA(arr[mid]) === true)
// => true가 나오는 범위에서 탐색 범위를 더 좁힘
// => mid 재계산

// 2. 조건에 만족하지 않는 경우 (funcA(arr[mid]) === false)
// => false가 나오는 범위에서 탐색 범위를 더 좁힘
// => mid 재계산

// 위 과정을 left가 right-1이 될 때까지 반복하고 ( while(left < right-1) ),
// left와 right의 차이가 1이 되어 반복문이 종료되면, left가 찾는 값이 된다.

// 조건이 복잡하기 구현 코드 생략함.
// 프로그래머스 lv3 64062.징검거리 건너기 문제의 풀이 참고하기
